openapi: 3.0.1
info:
  title: Test API
  version: v1
paths:
  /minimal-endpoint-with-name:
    get:
      tags:
        - OperationId
      operationId: GetMinimalApiWithName
      responses:
        '200':
          description: OK
  /minimal-endpoint-with-no-name:
    get:
      tags:
        - OperationId
      responses:
        '200':
          description: OK
  /explicitOperationIdInName:
    get:
      tags:
        - OperationId
      operationId: GetExplicitOperationIdInName
      responses:
        '200':
          description: Success
  /explicitOperationIdInSwagger:
    get:
      tags:
        - OperationId
      operationId: GetExplicitOperationIdInSwagger
      responses:
        '200':
          description: Success
  /noOperationId:
    get:
      tags:
        - OperationId
      operationId: GetNotOperationId
      responses:
        '200':
          description: Success
  /recordClassRequiredType:
    get:
      tags:
        - RequiredType
      operationId: GetRecordClassRequiredType
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredExampleGrandParentRecord'
  /classRequiredType:
    get:
      tags:
        - RequiredType
      operationId: GetClassRequiredType
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredExampleGrandParentClass'
  '/minimal-endpoint-with-typed-result-no-produces/{id}':
    get:
      tags:
        - TypedResult
      operationId: GetMinimalApiWithTypedResultWithNoProduces
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
  /minimal-endpoint-with-typed-result-with-produces:
    get:
      tags:
        - TypedResult
      operationId: GetMinimalApiWithTypedResultWithProduces
      parameters:
        - name: id
          in: query
          required: true
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
  /withOnlyOnePath:
    get:
      tags:
        - TypedResult
      operationId: TypeResultWithOnlyOnePath
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
  /withAnnotation:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithAnnotation
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /withNoAnnotation:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotation
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '400':
          description: '400'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: '404'
  /withNoAnnotationForAcceptedAndUnprocessableResponseNoType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotationForAcceptedAndUnprocessableResponseNoType
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '202':
          description: '202'
        '422':
          description: '422'
  /withNoAnnotationForAcceptedAndUnprocessableResponseWithType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotationForAcceptedAndUnprocessableResponseWithType
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '202':
          description: '202'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '422':
          description: '422'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
  /withNoAnnotationForCreatedAndConflictNoType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotationForCreatedAndConflictNoType
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '201':
          description: '201'
        '409':
          description: '409'
  /withNoAnnotationForCreatedAndConflictWithType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotationForCreatedAndConflictWithType
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '201':
          description: '201'
          content:
            application/json:
              schema:
                type: string
        '409':
          description: '409'
          content:
            application/json:
              schema:
                type: string
  /withNoAnnotationForNoContentAndUnauthorized:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotationForNoContentAndUnauthorized
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '204':
          description: '204'
        '401':
          description: '401'
  /voidOk:
    get:
      tags:
        - TypedResult
      operationId: VoidOk
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /withSwaggerResponseAnnotation:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithSwaggerResponseAnnotation
      responses:
        '200':
          description: Returns TypedResult
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
  /withExceptionsNoType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithExceptionsNoType
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '403':
          description: '403'
        '500':
          description: '500'
  /withExceptionsWithType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithExceptionsWithType
      parameters:
        - name: id
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '403':
          description: '403'
          content:
            application/json:
              schema:
                type: string
        '500':
          description: '500'
          content:
            application/json:
              schema:
                type: string
  /useApplicationJsonContentType:
    get:
      tags:
        - TypedResultNoProduces
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    RequiredExampleClass:
      required:
        - exampleProperty
        - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResultClass'
        exampleProperty:
          type: string
      additionalProperties: false
    RequiredExampleGrandParentClass:
      required:
        - requiredExampleParent
      type: object
      properties:
        requiredExampleParent:
          $ref: '#/components/schemas/RequiredExampleParentClass'
        optionalGrandParentProperty:
          type: string
          nullable: true
      additionalProperties: false
    RequiredExampleGrandParentRecord:
      required:
        - requiredExampleParent
      type: object
      properties:
        requiredExampleParent:
          $ref: '#/components/schemas/RequiredExampleParentRecord'
        optionalGrandParentProperty:
          type: string
          nullable: true
      additionalProperties: false
    RequiredExampleParentClass:
      required:
        - requiredExamples
      type: object
      properties:
        requiredExamples:
          type: array
          items:
            $ref: '#/components/schemas/RequiredExampleClass'
        optionalParentProperty:
          type: string
          nullable: true
      additionalProperties: false
    RequiredExampleParentRecord:
      required:
        - requiredExamples
      type: object
      properties:
        requiredExamples:
          type: array
          items:
            $ref: '#/components/schemas/RequiredExampleRecord'
        optionalParentProperty:
          type: string
          nullable: true
      additionalProperties: false
    RequiredExampleRecord:
      required:
        - exampleProperty
        - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResultRecord'
        exampleProperty:
          type: string
      additionalProperties: false
    ResultClass:
      required:
        - resultId
      type: object
      properties:
        resultId:
          type: string
        optionalResultProperty:
          type: string
          nullable: true
      additionalProperties: false
    ResultRecord:
      required:
        - resultId
      type: object
      properties:
        resultId:
          type: string
        optionalResultProperty:
          type: string
          nullable: true
      additionalProperties: false
    TypedResultExample:
      required:
        - count
        - name
      type: object
      properties:
        name:
          type: string
        count:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
      additionalProperties: false